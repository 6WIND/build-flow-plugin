<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form" xmlns:i="jelly:fmt">

    <script type='text/javascript' src='http://ajax.googleapis.com/ajax/libs/jquery/1.8.1/jquery.min.js'></script>
    <script type='text/javascript' src='http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.23/jquery-ui.min.js'></script>
    <script type="text/javascript" src="${resURL}/plugin/build-flow-plugin/scripts/jsPlumb.js "></script>
    
    <style type="text/css">
    #flow {
        list-style-type: none;
    }
    .step-wrapper {
        margin: 20px;
        display: inline-block;
        width: auto;
        vertical-align: top;
    }
    .start {
        float: left;
    }
    .start > div {
        border:solid 2px black;
        border-radius: 10px;
        box-shadow: 1px 1px 5px black;
        margin: 20px 0;
    }
    .build {
        border:solid 1px black;
        border-radius: 4px;
        box-shadow: 2px 2px 5px black;
        min-width: 100px;
    }
    .build.parallel {
        margin-top: 20px;
    }

    .build > .title {
        padding: 4px;
        border-bottom: 1px solid black;
        background-color: #ff7373;
        font-size: 18px;
        font-weight: bold;
    }
    .build.pending > .title {
        background-color: #ffff73;
    }
    .build.SUCCESS > .title {
        background-color: #67e667;
    }
    .build.flow > .title {
        background-color: #ffc373;
    }

    .build > .details {
        min-height: 40px;
        padding: 4px;
        background-color: #ff0000;
    }
    .build.pending > .details {
        background-color: #ffff00;
    }
    .build.SUCCESS > .details {
        background-color: #0c0;
    }
    .build.flow > .details {
        background-color: #ff9200;
    }
    </style>

    <j:set var="g" value="${it.jobsGraph}"/>
    <j:set var="n" value="${it.startJob}"/>
    <j:if test="${not empty g.outgoingEdgesOf(n)}">
        <ul id="flow">
            <li class="step-wrapper">
                <div class="build level-0 flow" id="${n.id}">
                    <div class="title">
                        <a href="${n.buildUrl}">${n}</a>
                    </div>
                    <div class="details"></div>
                </div>
            </li>
            <j:while test="${not empty g.outgoingEdgesOf(n)}">
                <li class="step-wrapper">
                    <j:forEach var="e" indexVar="i" items="${g.outgoingEdgesOf(n)}">
                        <j:set var="v" value="${g.getEdgeTarget(e)}"/>
                        <j:set var="status" value="${v.completed ? v.build.result : 'pending'}"/>
                        <div class="build ${i > 0 ? 'parallel' : 'first'} ${status}" id="${v.id}">
                            <div class="title">
                                <a href="${v.buildUrl}">${v}</a>
                            </div>
                            <div class="details">
                                <j:choose>
                                <j:when test="${v.started}">
                                    <j:choose>
                                    <j:when test="${v.build.building}">
                                        Started: ${v.build.timestampString} ago<br/>
                                        <t:buildProgressBar build="${v.build}"/>
                                    </j:when>
                                    <j:otherwise>
                                        Status: <t:buildStatusSummary build="${v.build}"/><br/>
                                        Started: ${v.startTime}<br/>
                                        Duration: ${v.build.durationString}<br/>
                                        <a href="${v.buildUrl}console">Console Output</a>
                                    </j:otherwise>
                                    </j:choose>
                                </j:when>
                                <j:otherwise>
                                    Scheduled
                                </j:otherwise>
                                </j:choose>
                            </div>
                        </div>
                    </j:forEach>
                </li>
                <j:set var="n" value="${v}"/>
            </j:while>
        </ul>

        <script type="text/javascript">
            jsPlumb.ready(function() {
                jsPlumb.importDefaults({
                    PaintStyle: { lineWidth: 2, strokeStyle: "green" },
                    Connector: [ "StateMachine" ],
                    Endpoint: [ "Dot", { radius: 1 } ],
                ConnectionOverlays: [[ "Arrow", {
                    location: 1,
                    id: "arrow",
                    length: 7,
                    width: 7
                    }]],
                    Anchor: ["RightMiddle", "LeftMiddle"]
                });

                jsPlumb.addEndpoint(
                    <j:forEach var="v" items="${g.vertexSet()}" varStatus="loop">
                        '${v.id}'
                        <j:if test="${!loop.last}">,</j:if>
                    </j:forEach>
                );

                <j:set var="n" value="${it.startJob}"/>
                <j:while test="${not empty g.outgoingEdgesOf(n)}">
                    <j:forEach var="e" indexVar="i" items="${g.outgoingEdgesOf(n)}">
                        <j:set var="v" value="${g.getEdgeTarget(e)}"/>
                        jsPlumb.connect({ source:"${n.id}", target:"${v.id}"});
                    </j:forEach>
                    <j:set var="n" value="${v}"/>
                </j:while>
            });
        </script>
    </j:if>

</j:jelly>